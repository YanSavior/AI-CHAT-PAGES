{"ast":null,"code":"// 简化版前端RAG系统实现\n// 使用关键词匹配，无需复杂的机器学习库\nclass SimpleFrontendRAG{constructor(){this.knowledgeBase=[];this.isInitialized=false;}async initialize(){try{console.log('初始化简化版前端RAG系统...');// 加载知识库数据\nawait this.loadKnowledgeBase();this.isInitialized=true;console.log('简化版前端RAG系统初始化完成');}catch(error){console.error('简化版前端RAG系统初始化失败:',error);}}async loadKnowledgeBase(){try{console.log('尝试加载知识库数据...');// 尝试多个可能的路径\nconst possiblePaths=['/data/knowledge_base.json','./data/knowledge_base.json','data/knowledge_base.json','/knowledge_base.json'];let data=null;let loadedPath=null;for(const path of possiblePaths){try{console.log(\"\\u5C1D\\u8BD5\\u4ECE\\u8DEF\\u5F84\\u52A0\\u8F7D: \".concat(path));const response=await fetch(path);if(response.ok){data=await response.json();loadedPath=path;console.log(\"\\u6210\\u529F\\u4ECE \".concat(path,\" \\u52A0\\u8F7D\\u77E5\\u8BC6\\u5E93\"));break;}else{console.log(\"\\u8DEF\\u5F84 \".concat(path,\" \\u8FD4\\u56DE\\u72B6\\u6001: \").concat(response.status));}}catch(pathError){console.log(\"\\u8DEF\\u5F84 \".concat(path,\" \\u52A0\\u8F7D\\u5931\\u8D25:\"),pathError.message);}}if(data&&data.documents){this.knowledgeBase=data.documents;console.log(\"\\u6210\\u529F\\u52A0\\u8F7D\\u4E86 \".concat(this.knowledgeBase.length,\" \\u4E2A\\u6587\\u6863\"));}else{console.log('所有路径都失败，使用默认知识库');this.useDefaultKnowledgeBase();}}catch(error){console.error('加载知识库失败:',error);this.useDefaultKnowledgeBase();}}useDefaultKnowledgeBase(){console.log('使用默认知识库');this.knowledgeBase=[\"计算机科学专业主要学习编程、算法、数据结构等课程\",\"软件工程专业注重软件开发和项目管理\",\"人工智能专业学习机器学习、深度学习等前沿技术\",\"数据科学专业结合统计学、编程和领域知识\",\"网络工程专业主要学习网络协议、网络安全等技术\",\"信息安全专业培养网络安全、密码学等方面的人才\",\"数字媒体技术专业结合艺术设计和计算机技术\",\"物联网工程专业学习传感器技术、嵌入式系统等\",\"云计算专业学习虚拟化技术、分布式系统等\",\"大数据专业专注于海量数据处理、分布式计算等\",\"大学一年级通常需要学习高等数学、线性代数等公共课程\",\"大学二年级开始学习专业核心课程，如数据结构、算法分析\",\"大学三年级深入学习专业方向课程，如软件工程、数据库系统\",\"大学四年级主要进行毕业设计、实习和就业准备\",\"计算机专业就业方向包括软件开发、系统架构、数据分析等\",\"软件工程师需要掌握多种编程语言，如Java、Python、C++等\",\"前端开发主要使用HTML、CSS、JavaScript等技术栈\",\"后端开发需要掌握服务器端编程、数据库设计、API开发等技能\",\"移动开发包括Android开发和iOS开发\",\"全栈开发需要同时掌握前端和后端技术\",\"数据库管理包括关系型数据库和NoSQL数据库\",\"云计算平台包括AWS、Azure、阿里云、腾讯云等\",\"DevOps工程师需要掌握自动化部署、容器化技术等\",\"网络安全工程师需要了解网络协议、加密算法等\",\"数据科学家需要掌握Python、R、SQL等工具\",\"人工智能工程师需要深度学习框架和算法优化能力\",\"产品经理需要了解技术实现，同时具备用户需求分析能力\",\"技术管理岗位需要技术背景和团队管理能力\",\"创业需要技术能力、商业思维和团队协作能力\",\"研究生阶段可以选择学术研究或专业硕士\",\"博士阶段主要进行学术研究，发表论文\",\"实习是了解行业和积累经验的重要途径\",\"参加技术竞赛可以提升算法能力和团队协作能力\",\"开源项目贡献可以提升技术能力，建立技术影响力\",\"技术博客写作可以总结学习经验，建立个人品牌\",\"技术会议和Meetup是了解行业动态和扩展人脉的好机会\",\"持续学习是IT行业的基本要求，需要关注新技术和行业趋势\",\"英语能力对技术学习和国际交流很重要\",\"团队协作能力在软件开发中非常重要\",\"时间管理能力对平衡学习和工作很重要\",\"健康管理很重要，长时间编程需要注意颈椎和眼睛健康\",\"心理调节能力对应对工作压力很重要\",\"职业规划需要结合个人兴趣和市场需求\"];console.log(\"\\u9ED8\\u8BA4\\u77E5\\u8BC6\\u5E93\\u52A0\\u8F7D\\u5B8C\\u6210\\uFF0C\\u5305\\u542B \".concat(this.knowledgeBase.length,\" \\u4E2A\\u6587\\u6863\"));}// 简单的关键词匹配算法\nextractKeywords(text){const keywords=['计算机','软件','人工智能','数据','网络','安全','数字媒体','物联网','云计算','大数据','编程','算法','数据结构','操作系统','数据库','机器学习','深度学习','前端','后端','移动开发','Java','Python','C++','JavaScript','HTML','CSS','MySQL','MongoDB','Redis','AWS','Azure','阿里云','腾讯云','Docker','Kubernetes','DevOps','大学','一年级','二年级','三年级','四年级','课程','学习','专业','就业','工作','实习','创业','研究生','博士','竞赛','开源','博客','英语','团队','时间管理','健康','心理','职业规划'];const foundKeywords=keywords.filter(keyword=>text.toLowerCase().includes(keyword.toLowerCase()));return foundKeywords;}// 计算文本相似度（基于关键词匹配）\ncalculateSimilarity(query,document){const queryKeywords=this.extractKeywords(query);const documentKeywords=this.extractKeywords(document);if(queryKeywords.length===0)return 0;const commonKeywords=queryKeywords.filter(keyword=>documentKeywords.includes(keyword));return commonKeywords.length/queryKeywords.length;}async query(question){let topK=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;if(!this.isInitialized){await this.initialize();}try{console.log(\"\\u67E5\\u8BE2\\u95EE\\u9898: \".concat(question));console.log(\"\\u77E5\\u8BC6\\u5E93\\u6587\\u6863\\u6570\\u91CF: \".concat(this.knowledgeBase.length));// 计算每个文档的相似度\nconst similarities=this.knowledgeBase.map((document,index)=>({index,similarity:this.calculateSimilarity(question,document),document:document}));// 过滤掉相似度为0的结果，并排序\nconst relevantResults=similarities.filter(result=>result.similarity>0).sort((a,b)=>b.similarity-a.similarity).slice(0,topK);console.log(\"\\u627E\\u5230 \".concat(relevantResults.length,\" \\u4E2A\\u76F8\\u5173\\u6587\\u6863\"));return{question,relevant_docs:relevantResults.map(r=>r.document),scores:relevantResults.map(r=>r.similarity)};}catch(error){console.error('查询失败:',error);return{question,relevant_docs:[],scores:[]};}}// 添加新文档到知识库\naddDocument(document){this.knowledgeBase.push(document);}// 获取知识库状态\ngetStatus(){return{isInitialized:this.isInitialized,documentCount:this.knowledgeBase.length,hasDocuments:this.knowledgeBase.length>0};}}export default SimpleFrontendRAG;","map":{"version":3,"names":["SimpleFrontendRAG","constructor","knowledgeBase","isInitialized","initialize","console","log","loadKnowledgeBase","error","possiblePaths","data","loadedPath","path","concat","response","fetch","ok","json","status","pathError","message","documents","length","useDefaultKnowledgeBase","extractKeywords","text","keywords","foundKeywords","filter","keyword","toLowerCase","includes","calculateSimilarity","query","document","queryKeywords","documentKeywords","commonKeywords","question","topK","arguments","undefined","similarities","map","index","similarity","relevantResults","result","sort","a","b","slice","relevant_docs","r","scores","addDocument","push","getStatus","documentCount","hasDocuments"],"sources":["D:/Projectsss/ai-chat-app1.0 - test - 副本 - 副本/src/utils/simpleFrontendRAG.js"],"sourcesContent":["// 简化版前端RAG系统实现\r\n// 使用关键词匹配，无需复杂的机器学习库\r\n\r\nclass SimpleFrontendRAG {\r\n  constructor() {\r\n    this.knowledgeBase = [];\r\n    this.isInitialized = false;\r\n  }\r\n\r\n  async initialize() {\r\n    try {\r\n      console.log('初始化简化版前端RAG系统...');\r\n      \r\n      // 加载知识库数据\r\n      await this.loadKnowledgeBase();\r\n      \r\n      this.isInitialized = true;\r\n      console.log('简化版前端RAG系统初始化完成');\r\n    } catch (error) {\r\n      console.error('简化版前端RAG系统初始化失败:', error);\r\n    }\r\n  }\r\n\r\n  async loadKnowledgeBase() {\r\n    try {\r\n      console.log('尝试加载知识库数据...');\r\n      \r\n      // 尝试多个可能的路径\r\n      const possiblePaths = [\r\n        '/data/knowledge_base.json',\r\n        './data/knowledge_base.json',\r\n        'data/knowledge_base.json',\r\n        '/knowledge_base.json'\r\n      ];\r\n\r\n      let data = null;\r\n      let loadedPath = null;\r\n\r\n      for (const path of possiblePaths) {\r\n        try {\r\n          console.log(`尝试从路径加载: ${path}`);\r\n          const response = await fetch(path);\r\n          \r\n          if (response.ok) {\r\n            data = await response.json();\r\n            loadedPath = path;\r\n            console.log(`成功从 ${path} 加载知识库`);\r\n            break;\r\n          } else {\r\n            console.log(`路径 ${path} 返回状态: ${response.status}`);\r\n          }\r\n        } catch (pathError) {\r\n          console.log(`路径 ${path} 加载失败:`, pathError.message);\r\n        }\r\n      }\r\n\r\n      if (data && data.documents) {\r\n        this.knowledgeBase = data.documents;\r\n        console.log(`成功加载了 ${this.knowledgeBase.length} 个文档`);\r\n      } else {\r\n        console.log('所有路径都失败，使用默认知识库');\r\n        this.useDefaultKnowledgeBase();\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('加载知识库失败:', error);\r\n      this.useDefaultKnowledgeBase();\r\n    }\r\n  }\r\n\r\n  useDefaultKnowledgeBase() {\r\n    console.log('使用默认知识库');\r\n    this.knowledgeBase = [\r\n      \"计算机科学专业主要学习编程、算法、数据结构等课程\",\r\n      \"软件工程专业注重软件开发和项目管理\",\r\n      \"人工智能专业学习机器学习、深度学习等前沿技术\",\r\n      \"数据科学专业结合统计学、编程和领域知识\",\r\n      \"网络工程专业主要学习网络协议、网络安全等技术\",\r\n      \"信息安全专业培养网络安全、密码学等方面的人才\",\r\n      \"数字媒体技术专业结合艺术设计和计算机技术\",\r\n      \"物联网工程专业学习传感器技术、嵌入式系统等\",\r\n      \"云计算专业学习虚拟化技术、分布式系统等\",\r\n      \"大数据专业专注于海量数据处理、分布式计算等\",\r\n      \"大学一年级通常需要学习高等数学、线性代数等公共课程\",\r\n      \"大学二年级开始学习专业核心课程，如数据结构、算法分析\",\r\n      \"大学三年级深入学习专业方向课程，如软件工程、数据库系统\",\r\n      \"大学四年级主要进行毕业设计、实习和就业准备\",\r\n      \"计算机专业就业方向包括软件开发、系统架构、数据分析等\",\r\n      \"软件工程师需要掌握多种编程语言，如Java、Python、C++等\",\r\n      \"前端开发主要使用HTML、CSS、JavaScript等技术栈\",\r\n      \"后端开发需要掌握服务器端编程、数据库设计、API开发等技能\",\r\n      \"移动开发包括Android开发和iOS开发\",\r\n      \"全栈开发需要同时掌握前端和后端技术\",\r\n      \"数据库管理包括关系型数据库和NoSQL数据库\",\r\n      \"云计算平台包括AWS、Azure、阿里云、腾讯云等\",\r\n      \"DevOps工程师需要掌握自动化部署、容器化技术等\",\r\n      \"网络安全工程师需要了解网络协议、加密算法等\",\r\n      \"数据科学家需要掌握Python、R、SQL等工具\",\r\n      \"人工智能工程师需要深度学习框架和算法优化能力\",\r\n      \"产品经理需要了解技术实现，同时具备用户需求分析能力\",\r\n      \"技术管理岗位需要技术背景和团队管理能力\",\r\n      \"创业需要技术能力、商业思维和团队协作能力\",\r\n      \"研究生阶段可以选择学术研究或专业硕士\",\r\n      \"博士阶段主要进行学术研究，发表论文\",\r\n      \"实习是了解行业和积累经验的重要途径\",\r\n      \"参加技术竞赛可以提升算法能力和团队协作能力\",\r\n      \"开源项目贡献可以提升技术能力，建立技术影响力\",\r\n      \"技术博客写作可以总结学习经验，建立个人品牌\",\r\n      \"技术会议和Meetup是了解行业动态和扩展人脉的好机会\",\r\n      \"持续学习是IT行业的基本要求，需要关注新技术和行业趋势\",\r\n      \"英语能力对技术学习和国际交流很重要\",\r\n      \"团队协作能力在软件开发中非常重要\",\r\n      \"时间管理能力对平衡学习和工作很重要\",\r\n      \"健康管理很重要，长时间编程需要注意颈椎和眼睛健康\",\r\n      \"心理调节能力对应对工作压力很重要\",\r\n      \"职业规划需要结合个人兴趣和市场需求\"\r\n    ];\r\n    console.log(`默认知识库加载完成，包含 ${this.knowledgeBase.length} 个文档`);\r\n  }\r\n\r\n  // 简单的关键词匹配算法\r\n  extractKeywords(text) {\r\n    const keywords = [\r\n      '计算机', '软件', '人工智能', '数据', '网络', '安全', '数字媒体', '物联网', '云计算', '大数据',\r\n      '编程', '算法', '数据结构', '操作系统', '数据库', '机器学习', '深度学习', '前端', '后端', '移动开发',\r\n      'Java', 'Python', 'C++', 'JavaScript', 'HTML', 'CSS', 'MySQL', 'MongoDB', 'Redis',\r\n      'AWS', 'Azure', '阿里云', '腾讯云', 'Docker', 'Kubernetes', 'DevOps',\r\n      '大学', '一年级', '二年级', '三年级', '四年级', '课程', '学习', '专业',\r\n      '就业', '工作', '实习', '创业', '研究生', '博士', '竞赛', '开源', '博客',\r\n      '英语', '团队', '时间管理', '健康', '心理', '职业规划'\r\n    ];\r\n    \r\n    const foundKeywords = keywords.filter(keyword => \r\n      text.toLowerCase().includes(keyword.toLowerCase())\r\n    );\r\n    \r\n    return foundKeywords;\r\n  }\r\n\r\n  // 计算文本相似度（基于关键词匹配）\r\n  calculateSimilarity(query, document) {\r\n    const queryKeywords = this.extractKeywords(query);\r\n    const documentKeywords = this.extractKeywords(document);\r\n    \r\n    if (queryKeywords.length === 0) return 0;\r\n    \r\n    const commonKeywords = queryKeywords.filter(keyword => \r\n      documentKeywords.includes(keyword)\r\n    );\r\n    \r\n    return commonKeywords.length / queryKeywords.length;\r\n  }\r\n\r\n  async query(question, topK = 3) {\r\n    if (!this.isInitialized) {\r\n      await this.initialize();\r\n    }\r\n\r\n    try {\r\n      console.log(`查询问题: ${question}`);\r\n      console.log(`知识库文档数量: ${this.knowledgeBase.length}`);\r\n      \r\n      // 计算每个文档的相似度\r\n      const similarities = this.knowledgeBase.map((document, index) => ({\r\n        index,\r\n        similarity: this.calculateSimilarity(question, document),\r\n        document: document\r\n      }));\r\n\r\n      // 过滤掉相似度为0的结果，并排序\r\n      const relevantResults = similarities\r\n        .filter(result => result.similarity > 0)\r\n        .sort((a, b) => b.similarity - a.similarity)\r\n        .slice(0, topK);\r\n\r\n      console.log(`找到 ${relevantResults.length} 个相关文档`);\r\n      \r\n      return {\r\n        question,\r\n        relevant_docs: relevantResults.map(r => r.document),\r\n        scores: relevantResults.map(r => r.similarity)\r\n      };\r\n    } catch (error) {\r\n      console.error('查询失败:', error);\r\n      return {\r\n        question,\r\n        relevant_docs: [],\r\n        scores: []\r\n      };\r\n    }\r\n  }\r\n\r\n  // 添加新文档到知识库\r\n  addDocument(document) {\r\n    this.knowledgeBase.push(document);\r\n  }\r\n\r\n  // 获取知识库状态\r\n  getStatus() {\r\n    return {\r\n      isInitialized: this.isInitialized,\r\n      documentCount: this.knowledgeBase.length,\r\n      hasDocuments: this.knowledgeBase.length > 0\r\n    };\r\n  }\r\n}\r\n\r\nexport default SimpleFrontendRAG; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}