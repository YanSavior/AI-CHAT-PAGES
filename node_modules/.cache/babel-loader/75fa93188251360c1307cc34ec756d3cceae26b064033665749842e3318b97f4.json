{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projectsss\\\\ai-chat-app1.0 - test - \\u526F\\u672C - \\u526F\\u672C\\\\src\\\\components\\\\AIAvatar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIAvatar = ({\n  isThinking = false,\n  isReplying = false\n}) => {\n  _s();\n  const [currentState, setCurrentState] = useState('normal');\n  const [showAha, setShowAha] = useState(false);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const timeoutRef = useRef(null);\n  const loadingTimeoutRef = useRef(null);\n\n  // 预加载图片并监听加载完成 - 更激进的优化\n  useEffect(() => {\n    const images = ['/Picture1.png', '/Picture2.png', '/Picturee.png'];\n    let loadedCount = 0;\n    const imageCache = {};\n    const checkAllLoaded = () => {\n      loadedCount++;\n      if (loadedCount === images.length) {\n        setImagesLoaded(true);\n        if (loadingTimeoutRef.current) {\n          clearTimeout(loadingTimeoutRef.current);\n        }\n      }\n    };\n\n    // 设置更短的等待时间，让AI形象更快显示\n    loadingTimeoutRef.current = setTimeout(() => {\n      setImagesLoaded(true);\n    }, 50); // 进一步减少到50ms\n\n    // 立即开始预加载图片，使用更激进的加载策略\n    images.forEach(src => {\n      const img = new Image();\n      img.onload = () => {\n        imageCache[src] = img; // 缓存已加载的图片\n        checkAllLoaded();\n      };\n      img.onerror = checkAllLoaded; // 即使加载失败也继续\n      // 设置图片加载优先级\n      img.loading = 'eager'; // 立即加载\n      img.decoding = 'sync'; // 同步解码\n      img.src = src;\n    });\n\n    // 额外的预加载策略：创建隐藏的img元素\n    images.forEach(src => {\n      const hiddenImg = document.createElement('img');\n      hiddenImg.style.display = 'none';\n      hiddenImg.loading = 'eager';\n      hiddenImg.decoding = 'sync';\n      hiddenImg.src = src;\n      document.body.appendChild(hiddenImg);\n    });\n\n    // 清理函数\n    return () => {\n      if (loadingTimeoutRef.current) {\n        clearTimeout(loadingTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // 监听状态变化 - 更快速的状态切换\n  useEffect(() => {\n    // 清除之前的定时器\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    if (isThinking) {\n      setCurrentState('thinking');\n      setIsTransitioning(false);\n    } else if (isReplying) {\n      setCurrentState('aha');\n      setShowAha(true);\n      setIsTransitioning(false);\n      // 1秒后开始快速切换回正常状态\n      timeoutRef.current = setTimeout(() => {\n        setShowAha(false);\n        setIsTransitioning(true);\n        // 添加一个更短的过渡时间，让切换更快\n        setTimeout(() => {\n          setCurrentState('normal');\n          setIsTransitioning(false);\n        }, 150); // 减少到150ms\n      }, 1000); // 减少到1秒\n    } else {\n      setCurrentState('normal');\n      setIsTransitioning(false);\n    }\n\n    // 清理函数\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [isThinking, isReplying]);\n\n  // 根据状态选择图片 - 使用缓存的图片\n  const getImageSrc = () => {\n    if (currentState === 'thinking') {\n      return '/Picture1.png';\n    } else if (currentState === 'aha') {\n      return '/Picture2.png';\n    } else {\n      return '/Picturee.png';\n    }\n  };\n\n  // 获取CSS类名，包含自然切换动画\n  const getAvatarClassName = () => {\n    if (isTransitioning && currentState === 'normal') {\n      return 'ai-avatar normal normal-return';\n    }\n    return `ai-avatar ${currentState}`;\n  };\n\n  // 如果图片还没加载完成，显示更快的加载状态\n  if (!imagesLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: '10px',\n        bottom: '10px',\n        zIndex: 1000,\n        width: '220px',\n        height: '280px',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '60px',\n          height: '60px',\n          borderRadius: '50%',\n          background: 'linear-gradient(45deg, #22c55e, #16a34a)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          color: 'white',\n          fontSize: '24px',\n          animation: 'pulse 0.6s ease-in-out infinite',\n          // 进一步加快脉冲动画\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: \"AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      left: '10px',\n      bottom: '10px',\n      zIndex: 1000,\n      width: '220px',\n      height: '280px',\n      pointerEvents: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getAvatarClassName(),\n      style: {\n        position: 'absolute',\n        bottom: '0',\n        left: '0',\n        width: '220px',\n        height: '240px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '100%',\n          backgroundImage: `url(${getImageSrc()})`,\n          backgroundSize: 'contain',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          filter: 'drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1))',\n          // 只在从恍然大悟切换回正常状态时添加过渡效果，但更快速\n          transition: isTransitioning ? 'opacity 0.15s ease-in-out' : 'none',\n          opacity: isTransitioning ? 0.9 : 1,\n          // 添加这些属性来避免渐进式加载\n          imageRendering: 'crisp-edges',\n          backfaceVisibility: 'hidden',\n          transform: 'translateZ(0)',\n          // 强制硬件加速\n          // 确保图片立即显示，无渐进式加载\n          objectFit: 'contain',\n          objectPosition: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), showAha && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aha-effects\",\n      style: {\n        position: 'absolute',\n        top: '-5px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        zIndex: 1001,\n        transition: 'opacity 0.15s ease-in-out',\n        // 更快速的淡出\n        opacity: isTransitioning ? 0 : 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aha-bubble\",\n        style: {\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          border: '4px solid #FFD700',\n          opacity: 0.9,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          animation: 'ahaGlow 0.2s ease-out' // 更快速的特效\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#FFD700',\n            fontSize: '24px',\n            fontWeight: 'bold'\n          },\n          children: \"\\uD83D\\uDCA1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(AIAvatar, \"a+YFMvc9MsrIkGWLh1eEUF1ChFA=\");\n_c = AIAvatar;\nexport default AIAvatar;\nvar _c;\n$RefreshReg$(_c, \"AIAvatar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AIAvatar","isThinking","isReplying","_s","currentState","setCurrentState","showAha","setShowAha","imagesLoaded","setImagesLoaded","isTransitioning","setIsTransitioning","timeoutRef","loadingTimeoutRef","images","loadedCount","imageCache","checkAllLoaded","length","current","clearTimeout","setTimeout","forEach","src","img","Image","onload","onerror","loading","decoding","hiddenImg","document","createElement","style","display","body","appendChild","getImageSrc","getAvatarClassName","position","left","bottom","zIndex","width","height","pointerEvents","alignItems","justifyContent","children","borderRadius","background","color","fontSize","animation","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","className","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","filter","transition","opacity","imageRendering","backfaceVisibility","transform","objectFit","objectPosition","top","border","fontWeight","_c","$RefreshReg$"],"sources":["D:/Projectsss/ai-chat-app1.0 - test - 副本 - 副本/src/components/AIAvatar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst AIAvatar = ({ isThinking = false, isReplying = false }) => {\n  const [currentState, setCurrentState] = useState('normal');\n  const [showAha, setShowAha] = useState(false);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const timeoutRef = useRef(null);\n  const loadingTimeoutRef = useRef(null);\n\n  // 预加载图片并监听加载完成 - 更激进的优化\n  useEffect(() => {\n    const images = ['/Picture1.png', '/Picture2.png', '/Picturee.png'];\n    let loadedCount = 0;\n    const imageCache = {};\n    \n    const checkAllLoaded = () => {\n      loadedCount++;\n      if (loadedCount === images.length) {\n        setImagesLoaded(true);\n        if (loadingTimeoutRef.current) {\n          clearTimeout(loadingTimeoutRef.current);\n        }\n      }\n    };\n\n    // 设置更短的等待时间，让AI形象更快显示\n    loadingTimeoutRef.current = setTimeout(() => {\n      setImagesLoaded(true);\n    }, 50); // 进一步减少到50ms\n\n    // 立即开始预加载图片，使用更激进的加载策略\n    images.forEach(src => {\n      const img = new Image();\n      img.onload = () => {\n        imageCache[src] = img; // 缓存已加载的图片\n        checkAllLoaded();\n      };\n      img.onerror = checkAllLoaded; // 即使加载失败也继续\n      // 设置图片加载优先级\n      img.loading = 'eager'; // 立即加载\n      img.decoding = 'sync'; // 同步解码\n      img.src = src;\n    });\n\n    // 额外的预加载策略：创建隐藏的img元素\n    images.forEach(src => {\n      const hiddenImg = document.createElement('img');\n      hiddenImg.style.display = 'none';\n      hiddenImg.loading = 'eager';\n      hiddenImg.decoding = 'sync';\n      hiddenImg.src = src;\n      document.body.appendChild(hiddenImg);\n    });\n\n    // 清理函数\n    return () => {\n      if (loadingTimeoutRef.current) {\n        clearTimeout(loadingTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // 监听状态变化 - 更快速的状态切换\n  useEffect(() => {\n    // 清除之前的定时器\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    if (isThinking) {\n      setCurrentState('thinking');\n      setIsTransitioning(false);\n    } else if (isReplying) {\n      setCurrentState('aha');\n      setShowAha(true);\n      setIsTransitioning(false);\n      // 1秒后开始快速切换回正常状态\n      timeoutRef.current = setTimeout(() => {\n        setShowAha(false);\n        setIsTransitioning(true);\n        // 添加一个更短的过渡时间，让切换更快\n        setTimeout(() => {\n          setCurrentState('normal');\n          setIsTransitioning(false);\n        }, 150); // 减少到150ms\n      }, 1000); // 减少到1秒\n    } else {\n      setCurrentState('normal');\n      setIsTransitioning(false);\n    }\n\n    // 清理函数\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [isThinking, isReplying]);\n\n  // 根据状态选择图片 - 使用缓存的图片\n  const getImageSrc = () => {\n    if (currentState === 'thinking') {\n      return '/Picture1.png';\n    } else if (currentState === 'aha') {\n      return '/Picture2.png';\n    } else {\n      return '/Picturee.png';\n    }\n  };\n\n  // 获取CSS类名，包含自然切换动画\n  const getAvatarClassName = () => {\n    if (isTransitioning && currentState === 'normal') {\n      return 'ai-avatar normal normal-return';\n    }\n    return `ai-avatar ${currentState}`;\n  };\n\n  // 如果图片还没加载完成，显示更快的加载状态\n  if (!imagesLoaded) {\n    return (\n      <div style={{ \n        position: 'absolute',\n        left: '10px',\n        bottom: '10px',\n        zIndex: 1000,\n        width: '220px',\n        height: '280px',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}>\n        <div style={{\n          width: '60px',\n          height: '60px',\n          borderRadius: '50%',\n          background: 'linear-gradient(45deg, #22c55e, #16a34a)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          color: 'white',\n          fontSize: '24px',\n          animation: 'pulse 0.6s ease-in-out infinite', // 进一步加快脉冲动画\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        }}>\n          AI\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ \n      position: 'absolute',\n      left: '10px',\n      bottom: '10px',\n      zIndex: 1000,\n      width: '220px',\n      height: '280px',\n      pointerEvents: 'none'\n    }}>\n      {/* 使用PhotoShop抠图的图片 - 更快速的切换效果，避免渐进式加载 */}\n      <div className={getAvatarClassName()} style={{\n        position: 'absolute',\n        bottom: '0',\n        left: '0',\n        width: '220px',\n        height: '240px'\n      }}>\n        <div \n          style={{\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${getImageSrc()})`,\n            backgroundSize: 'contain',\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n            filter: 'drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1))',\n            // 只在从恍然大悟切换回正常状态时添加过渡效果，但更快速\n            transition: isTransitioning ? 'opacity 0.15s ease-in-out' : 'none',\n            opacity: isTransitioning ? 0.9 : 1,\n            // 添加这些属性来避免渐进式加载\n            imageRendering: 'crisp-edges',\n            backfaceVisibility: 'hidden',\n            transform: 'translateZ(0)', // 强制硬件加速\n            // 确保图片立即显示，无渐进式加载\n            objectFit: 'contain',\n            objectPosition: 'center'\n          }}\n        />\n      </div>\n\n      {/* 恍然大悟状态特效 */}\n      {showAha && (\n        <div className=\"aha-effects\" style={{\n          position: 'absolute',\n          top: '-5px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1001,\n          transition: 'opacity 0.15s ease-in-out', // 更快速的淡出\n          opacity: isTransitioning ? 0 : 1\n        }}>\n          <div className=\"aha-bubble\" style={{\n            width: '40px',\n            height: '40px',\n            borderRadius: '50%',\n            border: '4px solid #FFD700',\n            opacity: 0.9,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            animation: 'ahaGlow 0.2s ease-out' // 更快速的特效\n          }}>\n            <span style={{\n              color: '#FFD700',\n              fontSize: '24px',\n              fontWeight: 'bold'\n            }}>💡</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AIAvatar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}