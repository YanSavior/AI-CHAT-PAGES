{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AIAvatar=_ref=>{let{isThinking=false,isReplying=false}=_ref;const[currentState,setCurrentState]=useState('normal');const[showAha,setShowAha]=useState(false);const[imagesLoaded,setImagesLoaded]=useState(false);const[isTransitioning,setIsTransitioning]=useState(false);const timeoutRef=useRef(null);const loadingTimeoutRef=useRef(null);// 预加载图片并监听加载完成 - 更激进的优化\nuseEffect(()=>{const images=['/Picture1.png','/Picture2.png','/Picturee.png'];let loadedCount=0;const imageCache={};const checkAllLoaded=()=>{loadedCount++;if(loadedCount===images.length){setImagesLoaded(true);if(loadingTimeoutRef.current){clearTimeout(loadingTimeoutRef.current);}}};// 设置更短的等待时间，让AI形象更快显示\nloadingTimeoutRef.current=setTimeout(()=>{setImagesLoaded(true);},50);// 进一步减少到50ms\n// 立即开始预加载图片，使用更激进的加载策略\nimages.forEach(src=>{const img=new Image();img.onload=()=>{imageCache[src]=img;// 缓存已加载的图片\ncheckAllLoaded();};img.onerror=checkAllLoaded;// 即使加载失败也继续\n// 设置图片加载优先级\nimg.loading='eager';// 立即加载\nimg.decoding='sync';// 同步解码\nimg.src=src;});// 额外的预加载策略：创建隐藏的img元素\nimages.forEach(src=>{const hiddenImg=document.createElement('img');hiddenImg.style.display='none';hiddenImg.loading='eager';hiddenImg.decoding='sync';hiddenImg.src=src;document.body.appendChild(hiddenImg);});// 清理函数\nreturn()=>{if(loadingTimeoutRef.current){clearTimeout(loadingTimeoutRef.current);}};},[]);// 监听状态变化 - 更快速的状态切换\nuseEffect(()=>{// 清除之前的定时器\nif(timeoutRef.current){clearTimeout(timeoutRef.current);}if(isThinking){setCurrentState('thinking');setIsTransitioning(false);}else if(isReplying){setCurrentState('aha');setShowAha(true);setIsTransitioning(false);// 1秒后开始快速切换回正常状态\ntimeoutRef.current=setTimeout(()=>{setShowAha(false);setIsTransitioning(true);// 添加一个更短的过渡时间，让切换更快\nsetTimeout(()=>{setCurrentState('normal');setIsTransitioning(false);},150);// 减少到150ms\n},1000);// 减少到1秒\n}else{setCurrentState('normal');setIsTransitioning(false);}// 清理函数\nreturn()=>{if(timeoutRef.current){clearTimeout(timeoutRef.current);}};},[isThinking,isReplying]);// 根据状态选择图片 - 使用缓存的图片\nconst getImageSrc=()=>{if(currentState==='thinking'){return'/Picture1.png';}else if(currentState==='aha'){return'/Picture2.png';}else{return'/Picturee.png';}};// 获取CSS类名，包含自然切换动画\nconst getAvatarClassName=()=>{if(isTransitioning&&currentState==='normal'){return'ai-avatar normal normal-return';}return\"ai-avatar \".concat(currentState);};// 如果图片还没加载完成，显示更快的加载状态\nif(!imagesLoaded){return/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:'10px',bottom:'10px',zIndex:1000,width:'220px',height:'280px',pointerEvents:'none',display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsx(\"div\",{style:{width:'60px',height:'60px',borderRadius:'50%',background:'linear-gradient(45deg, #22c55e, #16a34a)',display:'flex',alignItems:'center',justifyContent:'center',color:'white',fontSize:'24px',animation:'pulse 0.6s ease-in-out infinite',// 进一步加快脉冲动画\nboxShadow:'0 4px 8px rgba(0, 0, 0, 0.1)'},children:\"AI\"})});}return/*#__PURE__*/_jsxs(\"div\",{style:{position:'absolute',left:'10px',bottom:'10px',zIndex:1000,width:'220px',height:'280px',pointerEvents:'none'},children:[/*#__PURE__*/_jsx(\"div\",{className:getAvatarClassName(),style:{position:'absolute',bottom:'0',left:'0',width:'220px',height:'240px'},children:/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:'100%',backgroundImage:\"url(\".concat(getImageSrc(),\")\"),backgroundSize:'contain',backgroundPosition:'center',backgroundRepeat:'no-repeat',filter:'drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1))',// 只在从恍然大悟切换回正常状态时添加过渡效果，但更快速\ntransition:isTransitioning?'opacity 0.15s ease-in-out':'none',opacity:isTransitioning?0.9:1,// 添加这些属性来避免渐进式加载\nimageRendering:'crisp-edges',backfaceVisibility:'hidden',transform:'translateZ(0)',// 强制硬件加速\n// 确保图片立即显示，无渐进式加载\nobjectFit:'contain',objectPosition:'center'}})}),showAha&&/*#__PURE__*/_jsx(\"div\",{className:\"aha-effects\",style:{position:'absolute',top:'-5px',left:'50%',transform:'translateX(-50%)',zIndex:1001,transition:'opacity 0.15s ease-in-out',// 更快速的淡出\nopacity:isTransitioning?0:1},children:/*#__PURE__*/_jsx(\"div\",{className:\"aha-bubble\",style:{width:'40px',height:'40px',borderRadius:'50%',border:'4px solid #FFD700',opacity:0.9,display:'flex',alignItems:'center',justifyContent:'center',animation:'ahaGlow 0.2s ease-out'// 更快速的特效\n},children:/*#__PURE__*/_jsx(\"span\",{style:{color:'#FFD700',fontSize:'24px',fontWeight:'bold'},children:\"\\uD83D\\uDCA1\"})})})]});};export default AIAvatar;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","AIAvatar","_ref","isThinking","isReplying","currentState","setCurrentState","showAha","setShowAha","imagesLoaded","setImagesLoaded","isTransitioning","setIsTransitioning","timeoutRef","loadingTimeoutRef","images","loadedCount","imageCache","checkAllLoaded","length","current","clearTimeout","setTimeout","forEach","src","img","Image","onload","onerror","loading","decoding","hiddenImg","document","createElement","style","display","body","appendChild","getImageSrc","getAvatarClassName","concat","position","left","bottom","zIndex","width","height","pointerEvents","alignItems","justifyContent","children","borderRadius","background","color","fontSize","animation","boxShadow","className","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","filter","transition","opacity","imageRendering","backfaceVisibility","transform","objectFit","objectPosition","top","border","fontWeight"],"sources":["D:/Projectsss/ai-chat-app1.0 - test - 副本/src/components/AIAvatar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst AIAvatar = ({ isThinking = false, isReplying = false }) => {\n  const [currentState, setCurrentState] = useState('normal');\n  const [showAha, setShowAha] = useState(false);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const timeoutRef = useRef(null);\n  const loadingTimeoutRef = useRef(null);\n\n  // 预加载图片并监听加载完成 - 更激进的优化\n  useEffect(() => {\n    const images = ['/Picture1.png', '/Picture2.png', '/Picturee.png'];\n    let loadedCount = 0;\n    const imageCache = {};\n    \n    const checkAllLoaded = () => {\n      loadedCount++;\n      if (loadedCount === images.length) {\n        setImagesLoaded(true);\n        if (loadingTimeoutRef.current) {\n          clearTimeout(loadingTimeoutRef.current);\n        }\n      }\n    };\n\n    // 设置更短的等待时间，让AI形象更快显示\n    loadingTimeoutRef.current = setTimeout(() => {\n      setImagesLoaded(true);\n    }, 50); // 进一步减少到50ms\n\n    // 立即开始预加载图片，使用更激进的加载策略\n    images.forEach(src => {\n      const img = new Image();\n      img.onload = () => {\n        imageCache[src] = img; // 缓存已加载的图片\n        checkAllLoaded();\n      };\n      img.onerror = checkAllLoaded; // 即使加载失败也继续\n      // 设置图片加载优先级\n      img.loading = 'eager'; // 立即加载\n      img.decoding = 'sync'; // 同步解码\n      img.src = src;\n    });\n\n    // 额外的预加载策略：创建隐藏的img元素\n    images.forEach(src => {\n      const hiddenImg = document.createElement('img');\n      hiddenImg.style.display = 'none';\n      hiddenImg.loading = 'eager';\n      hiddenImg.decoding = 'sync';\n      hiddenImg.src = src;\n      document.body.appendChild(hiddenImg);\n    });\n\n    // 清理函数\n    return () => {\n      if (loadingTimeoutRef.current) {\n        clearTimeout(loadingTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // 监听状态变化 - 更快速的状态切换\n  useEffect(() => {\n    // 清除之前的定时器\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    if (isThinking) {\n      setCurrentState('thinking');\n      setIsTransitioning(false);\n    } else if (isReplying) {\n      setCurrentState('aha');\n      setShowAha(true);\n      setIsTransitioning(false);\n      // 1秒后开始快速切换回正常状态\n      timeoutRef.current = setTimeout(() => {\n        setShowAha(false);\n        setIsTransitioning(true);\n        // 添加一个更短的过渡时间，让切换更快\n        setTimeout(() => {\n          setCurrentState('normal');\n          setIsTransitioning(false);\n        }, 150); // 减少到150ms\n      }, 1000); // 减少到1秒\n    } else {\n      setCurrentState('normal');\n      setIsTransitioning(false);\n    }\n\n    // 清理函数\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [isThinking, isReplying]);\n\n  // 根据状态选择图片 - 使用缓存的图片\n  const getImageSrc = () => {\n    if (currentState === 'thinking') {\n      return '/Picture1.png';\n    } else if (currentState === 'aha') {\n      return '/Picture2.png';\n    } else {\n      return '/Picturee.png';\n    }\n  };\n\n  // 获取CSS类名，包含自然切换动画\n  const getAvatarClassName = () => {\n    if (isTransitioning && currentState === 'normal') {\n      return 'ai-avatar normal normal-return';\n    }\n    return `ai-avatar ${currentState}`;\n  };\n\n  // 如果图片还没加载完成，显示更快的加载状态\n  if (!imagesLoaded) {\n    return (\n      <div style={{ \n        position: 'absolute',\n        left: '10px',\n        bottom: '10px',\n        zIndex: 1000,\n        width: '220px',\n        height: '280px',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}>\n        <div style={{\n          width: '60px',\n          height: '60px',\n          borderRadius: '50%',\n          background: 'linear-gradient(45deg, #22c55e, #16a34a)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          color: 'white',\n          fontSize: '24px',\n          animation: 'pulse 0.6s ease-in-out infinite', // 进一步加快脉冲动画\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        }}>\n          AI\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ \n      position: 'absolute',\n      left: '10px',\n      bottom: '10px',\n      zIndex: 1000,\n      width: '220px',\n      height: '280px',\n      pointerEvents: 'none'\n    }}>\n      {/* 使用PhotoShop抠图的图片 - 更快速的切换效果，避免渐进式加载 */}\n      <div className={getAvatarClassName()} style={{\n        position: 'absolute',\n        bottom: '0',\n        left: '0',\n        width: '220px',\n        height: '240px'\n      }}>\n        <div \n          style={{\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${getImageSrc()})`,\n            backgroundSize: 'contain',\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n            filter: 'drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1))',\n            // 只在从恍然大悟切换回正常状态时添加过渡效果，但更快速\n            transition: isTransitioning ? 'opacity 0.15s ease-in-out' : 'none',\n            opacity: isTransitioning ? 0.9 : 1,\n            // 添加这些属性来避免渐进式加载\n            imageRendering: 'crisp-edges',\n            backfaceVisibility: 'hidden',\n            transform: 'translateZ(0)', // 强制硬件加速\n            // 确保图片立即显示，无渐进式加载\n            objectFit: 'contain',\n            objectPosition: 'center'\n          }}\n        />\n      </div>\n\n      {/* 恍然大悟状态特效 */}\n      {showAha && (\n        <div className=\"aha-effects\" style={{\n          position: 'absolute',\n          top: '-5px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 1001,\n          transition: 'opacity 0.15s ease-in-out', // 更快速的淡出\n          opacity: isTransitioning ? 0 : 1\n        }}>\n          <div className=\"aha-bubble\" style={{\n            width: '40px',\n            height: '40px',\n            borderRadius: '50%',\n            border: '4px solid #FFD700',\n            opacity: 0.9,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            animation: 'ahaGlow 0.2s ease-out' // 更快速的特效\n          }}>\n            <span style={{\n              color: '#FFD700',\n              fontSize: '24px',\n              fontWeight: 'bold'\n            }}>💡</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AIAvatar; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3D,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAgD,IAA/C,CAAEC,UAAU,CAAG,KAAK,CAAEC,UAAU,CAAG,KAAM,CAAC,CAAAF,IAAA,CAC1D,KAAM,CAACG,YAAY,CAAEC,eAAe,CAAC,CAAGZ,QAAQ,CAAC,QAAQ,CAAC,CAC1D,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACiB,eAAe,CAAEC,kBAAkB,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAAAmB,UAAU,CAAGjB,MAAM,CAAC,IAAI,CAAC,CAC/B,KAAM,CAAAkB,iBAAiB,CAAGlB,MAAM,CAAC,IAAI,CAAC,CAEtC;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,MAAM,CAAG,CAAC,eAAe,CAAE,eAAe,CAAE,eAAe,CAAC,CAClE,GAAI,CAAAC,WAAW,CAAG,CAAC,CACnB,KAAM,CAAAC,UAAU,CAAG,CAAC,CAAC,CAErB,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3BF,WAAW,EAAE,CACb,GAAIA,WAAW,GAAKD,MAAM,CAACI,MAAM,CAAE,CACjCT,eAAe,CAAC,IAAI,CAAC,CACrB,GAAII,iBAAiB,CAACM,OAAO,CAAE,CAC7BC,YAAY,CAACP,iBAAiB,CAACM,OAAO,CAAC,CACzC,CACF,CACF,CAAC,CAED;AACAN,iBAAiB,CAACM,OAAO,CAAGE,UAAU,CAAC,IAAM,CAC3CZ,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER;AACAK,MAAM,CAACQ,OAAO,CAACC,GAAG,EAAI,CACpB,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,KAAK,CAAC,CAAC,CACvBD,GAAG,CAACE,MAAM,CAAG,IAAM,CACjBV,UAAU,CAACO,GAAG,CAAC,CAAGC,GAAG,CAAE;AACvBP,cAAc,CAAC,CAAC,CAClB,CAAC,CACDO,GAAG,CAACG,OAAO,CAAGV,cAAc,CAAE;AAC9B;AACAO,GAAG,CAACI,OAAO,CAAG,OAAO,CAAE;AACvBJ,GAAG,CAACK,QAAQ,CAAG,MAAM,CAAE;AACvBL,GAAG,CAACD,GAAG,CAAGA,GAAG,CACf,CAAC,CAAC,CAEF;AACAT,MAAM,CAACQ,OAAO,CAACC,GAAG,EAAI,CACpB,KAAM,CAAAO,SAAS,CAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAC/CF,SAAS,CAACG,KAAK,CAACC,OAAO,CAAG,MAAM,CAChCJ,SAAS,CAACF,OAAO,CAAG,OAAO,CAC3BE,SAAS,CAACD,QAAQ,CAAG,MAAM,CAC3BC,SAAS,CAACP,GAAG,CAAGA,GAAG,CACnBQ,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,SAAS,CAAC,CACtC,CAAC,CAAC,CAEF;AACA,MAAO,IAAM,CACX,GAAIjB,iBAAiB,CAACM,OAAO,CAAE,CAC7BC,YAAY,CAACP,iBAAiB,CAACM,OAAO,CAAC,CACzC,CACF,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN;AACAzB,SAAS,CAAC,IAAM,CACd;AACA,GAAIkB,UAAU,CAACO,OAAO,CAAE,CACtBC,YAAY,CAACR,UAAU,CAACO,OAAO,CAAC,CAClC,CAEA,GAAIjB,UAAU,CAAE,CACdG,eAAe,CAAC,UAAU,CAAC,CAC3BM,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,IAAM,IAAIR,UAAU,CAAE,CACrBE,eAAe,CAAC,KAAK,CAAC,CACtBE,UAAU,CAAC,IAAI,CAAC,CAChBI,kBAAkB,CAAC,KAAK,CAAC,CACzB;AACAC,UAAU,CAACO,OAAO,CAAGE,UAAU,CAAC,IAAM,CACpCd,UAAU,CAAC,KAAK,CAAC,CACjBI,kBAAkB,CAAC,IAAI,CAAC,CACxB;AACAU,UAAU,CAAC,IAAM,CACfhB,eAAe,CAAC,QAAQ,CAAC,CACzBM,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,CAAE,GAAG,CAAC,CAAE;AACX,CAAC,CAAE,IAAI,CAAC,CAAE;AACZ,CAAC,IAAM,CACLN,eAAe,CAAC,QAAQ,CAAC,CACzBM,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAEA;AACA,MAAO,IAAM,CACX,GAAIC,UAAU,CAACO,OAAO,CAAE,CACtBC,YAAY,CAACR,UAAU,CAACO,OAAO,CAAC,CAClC,CACF,CAAC,CACH,CAAC,CAAE,CAACjB,UAAU,CAAEC,UAAU,CAAC,CAAC,CAE5B;AACA,KAAM,CAAAkC,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAIjC,YAAY,GAAK,UAAU,CAAE,CAC/B,MAAO,eAAe,CACxB,CAAC,IAAM,IAAIA,YAAY,GAAK,KAAK,CAAE,CACjC,MAAO,eAAe,CACxB,CAAC,IAAM,CACL,MAAO,eAAe,CACxB,CACF,CAAC,CAED;AACA,KAAM,CAAAkC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAI5B,eAAe,EAAIN,YAAY,GAAK,QAAQ,CAAE,CAChD,MAAO,gCAAgC,CACzC,CACA,mBAAAmC,MAAA,CAAoBnC,YAAY,EAClC,CAAC,CAED;AACA,GAAI,CAACI,YAAY,CAAE,CACjB,mBACEX,IAAA,QAAKoC,KAAK,CAAE,CACVO,QAAQ,CAAE,UAAU,CACpBC,IAAI,CAAE,MAAM,CACZC,MAAM,CAAE,MAAM,CACdC,MAAM,CAAE,IAAI,CACZC,KAAK,CAAE,OAAO,CACdC,MAAM,CAAE,OAAO,CACfC,aAAa,CAAE,MAAM,CACrBZ,OAAO,CAAE,MAAM,CACfa,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAClB,CAAE,CAAAC,QAAA,cACApD,IAAA,QAAKoC,KAAK,CAAE,CACVW,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdK,YAAY,CAAE,KAAK,CACnBC,UAAU,CAAE,0CAA0C,CACtDjB,OAAO,CAAE,MAAM,CACfa,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBI,KAAK,CAAE,OAAO,CACdC,QAAQ,CAAE,MAAM,CAChBC,SAAS,CAAE,iCAAiC,CAAE;AAC9CC,SAAS,CAAE,8BACb,CAAE,CAAAN,QAAA,CAAC,IAEH,CAAK,CAAC,CACH,CAAC,CAEV,CAEA,mBACElD,KAAA,QAAKkC,KAAK,CAAE,CACVO,QAAQ,CAAE,UAAU,CACpBC,IAAI,CAAE,MAAM,CACZC,MAAM,CAAE,MAAM,CACdC,MAAM,CAAE,IAAI,CACZC,KAAK,CAAE,OAAO,CACdC,MAAM,CAAE,OAAO,CACfC,aAAa,CAAE,MACjB,CAAE,CAAAG,QAAA,eAEApD,IAAA,QAAK2D,SAAS,CAAElB,kBAAkB,CAAC,CAAE,CAACL,KAAK,CAAE,CAC3CO,QAAQ,CAAE,UAAU,CACpBE,MAAM,CAAE,GAAG,CACXD,IAAI,CAAE,GAAG,CACTG,KAAK,CAAE,OAAO,CACdC,MAAM,CAAE,OACV,CAAE,CAAAI,QAAA,cACApD,IAAA,QACEoC,KAAK,CAAE,CACLW,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdY,eAAe,QAAAlB,MAAA,CAASF,WAAW,CAAC,CAAC,KAAG,CACxCqB,cAAc,CAAE,SAAS,CACzBC,kBAAkB,CAAE,QAAQ,CAC5BC,gBAAgB,CAAE,WAAW,CAC7BC,MAAM,CAAE,2CAA2C,CACnD;AACAC,UAAU,CAAEpD,eAAe,CAAG,2BAA2B,CAAG,MAAM,CAClEqD,OAAO,CAAErD,eAAe,CAAG,GAAG,CAAG,CAAC,CAClC;AACAsD,cAAc,CAAE,aAAa,CAC7BC,kBAAkB,CAAE,QAAQ,CAC5BC,SAAS,CAAE,eAAe,CAAE;AAC5B;AACAC,SAAS,CAAE,SAAS,CACpBC,cAAc,CAAE,QAClB,CAAE,CACH,CAAC,CACC,CAAC,CAGL9D,OAAO,eACNT,IAAA,QAAK2D,SAAS,CAAC,aAAa,CAACvB,KAAK,CAAE,CAClCO,QAAQ,CAAE,UAAU,CACpB6B,GAAG,CAAE,MAAM,CACX5B,IAAI,CAAE,KAAK,CACXyB,SAAS,CAAE,kBAAkB,CAC7BvB,MAAM,CAAE,IAAI,CACZmB,UAAU,CAAE,2BAA2B,CAAE;AACzCC,OAAO,CAAErD,eAAe,CAAG,CAAC,CAAG,CACjC,CAAE,CAAAuC,QAAA,cACApD,IAAA,QAAK2D,SAAS,CAAC,YAAY,CAACvB,KAAK,CAAE,CACjCW,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdK,YAAY,CAAE,KAAK,CACnBoB,MAAM,CAAE,mBAAmB,CAC3BP,OAAO,CAAE,GAAG,CACZ7B,OAAO,CAAE,MAAM,CACfa,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBM,SAAS,CAAE,uBAAwB;AACrC,CAAE,CAAAL,QAAA,cACApD,IAAA,SAAMoC,KAAK,CAAE,CACXmB,KAAK,CAAE,SAAS,CAChBC,QAAQ,CAAE,MAAM,CAChBkB,UAAU,CAAE,MACd,CAAE,CAAAtB,QAAA,CAAC,cAAE,CAAM,CAAC,CACT,CAAC,CACH,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}